{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED, GET_REPOS } from '../actions/types'; // GET current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET all users profile\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get('/api/profile');\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET profile by ID\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    // console.log(err);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // GET Github repos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config); // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config); // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusData,\n        status: err.response.data\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusData,\n        status: err.response.data\n      }\n    });\n  }\n}; // Delete account\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure?')) {\n    try {\n      await axios.delete(`/api/profile/`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Account Remove'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusData,\n          status: err.response.data\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["D:/Documents/VSCode/devconnector_new/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","GET_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","statusData","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from '../actions/alert';\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\n// GET current user profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET all users profile\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET profile by ID\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      config: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      config: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    // dispatch({\r\n    //   type: GET_PROFILE,\r\n    //   payload: res.data,\r\n    // });\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      config: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n    // dispatch({\r\n    //   type: GET_PROFILE,\r\n    //   payload: res.data,\r\n    // });\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Remove', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusData, status: err.response.data },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Remove', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusData, status: err.response.data },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account\r\nexport const deleteAccount = (id) => async (dispatch) => {\r\n  if (window.confirm('Are you sure?')) {\r\n    try {\r\n      await axios.delete(`/api/profile/`);\r\n\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({\r\n        type: ACCOUNT_DELETED,\r\n      });\r\n      dispatch(setAlert('Account Remove'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusData, status: err.response.data },\r\n      });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}