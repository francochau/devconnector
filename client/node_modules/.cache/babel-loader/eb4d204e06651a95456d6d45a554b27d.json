{"ast":null,"code":"import React,{useEffect,Fragment}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import{getCurrentProfile,deleteAccount}from'../../actions/profile';import Spinner from'../layout/Spinner';import DashboardActions from'./DashboardActions';import Experience from'./Experience';import Education from'./Education';var Dashboard=function Dashboard(_ref){var deleteAccount=_ref.deleteAccount,getCurrentProfile=_ref.getCurrentProfile,user=_ref.auth.user,_ref$profile=_ref.profile,profile=_ref$profile.profile,loading=_ref$profile.loading;useEffect(function(){getCurrentProfile();},[getCurrentProfile]);return loading&&profile==null?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Dashboard\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" Welcome \",user&&user.name),profile!==null?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(DashboardActions,null),/*#__PURE__*/React.createElement(Experience,{experience:profile.experience}),/*#__PURE__*/React.createElement(Education,{education:profile.education}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return deleteAccount();},className:\"btn btn-danger\"},\"Delete Account\"))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"Profile not yet set up, please add info\"),/*#__PURE__*/React.createElement(Link,{to:\"/create-profile\",className:\"btn btn-primary my=1\"},\"Create Profile\")));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile};};export default connect(mapStateToProps,{getCurrentProfile:getCurrentProfile,deleteAccount:deleteAccount})(Dashboard);","map":{"version":3,"sources":["/Users/franco/Documents/VSCode/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","Link","connect","getCurrentProfile","deleteAccount","Spinner","DashboardActions","Experience","Education","Dashboard","user","auth","profile","loading","name","experience","education","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAT,CAA4BC,aAA5B,KAAiD,uBAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAKZ,IAJJL,CAAAA,aAII,MAJJA,aAII,CAHJD,iBAGI,MAHJA,iBAGI,CAFIO,IAEJ,MAFJC,IAEI,CAFID,IAEJ,mBADJE,OACI,CADOA,OACP,cADOA,OACP,CADgBC,OAChB,cADgBA,OAChB,CACJd,SAAS,CAAC,UAAM,CACdI,iBAAiB,GAClB,CAFQ,CAEN,CAACA,iBAAD,CAFM,CAAT,CAIA,MAAOU,CAAAA,OAAO,EAAID,OAAO,EAAI,IAAtB,cACL,oBAAC,OAAD,MADK,cAGL,oBAAC,QAAD,mBACE,0BAAI,SAAS,CAAC,oBAAd,cADF,cAEE,yBAAG,SAAS,CAAC,MAAb,eACE,yBAAG,SAAS,CAAC,aAAb,EADF,aAC2CF,IAAI,EAAIA,IAAI,CAACI,IADxD,CAFF,CAKGF,OAAO,GAAK,IAAZ,cACC,oBAAC,QAAD,mBACE,oBAAC,gBAAD,MADF,cAEE,oBAAC,UAAD,EAAY,UAAU,CAAEA,OAAO,CAACG,UAAhC,EAFF,cAGE,oBAAC,SAAD,EAAW,SAAS,CAAEH,OAAO,CAACI,SAA9B,EAHF,cAKE,4CACE,8BAAQ,OAAO,CAAE,yBAAMZ,CAAAA,aAAa,EAAnB,EAAjB,CAAwC,SAAS,CAAC,gBAAlD,mBADF,CALF,CADD,cAaC,oBAAC,QAAD,mBACE,uEADF,cAEE,oBAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,sBAArC,mBAFF,CAlBJ,CAHF,CA8BD,CAxCD,CAiDA,GAAMa,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCP,IAAI,CAAEO,KAAK,CAACP,IADsB,CAElCC,OAAO,CAAEM,KAAK,CAACN,OAFmB,CAAZ,EAAxB,CAIA,cAAeV,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAAEd,iBAAiB,CAAjBA,iBAAF,CAAqBC,aAAa,CAAbA,aAArB,CAAlB,CAAP,CACbK,SADa,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  deleteAccount,\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile == null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div>\n            <button onClick={() => deleteAccount()} className='btn btn-danger'>\n              Delete Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>Profile not yet set up, please add info</p>\n          <Link to='/create-profile' className='btn btn-primary my=1'>\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}