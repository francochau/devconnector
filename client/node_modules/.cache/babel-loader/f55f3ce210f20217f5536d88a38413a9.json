{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST } from './types'; // GET Posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n}; // Add Like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n}; // Remove Like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n}; // Delete Post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n}; // Add Post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    header: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/`, formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n}; // GET Post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        ststus: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["D:/Documents/VSCode/devconnector_new/client/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","ststus","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","header","post","getPost"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n} from './types';\r\n\r\n// GET Posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove Like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Post\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    header: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(`/api/posts/`, formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// GET Post\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, ststus: err.response.status },\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}