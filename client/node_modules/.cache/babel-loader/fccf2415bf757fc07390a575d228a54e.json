{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, CLEAR_PROFILE, ACCOUNT_DELETED } from '../actions/types'; // GET current user profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('http://localhost:3000/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err); // dispatch({\n    //   type: PROFILE_ERROR,\n    //   payload: { msg: err.response.statusText, status: err.response.status },\n    // });\n  }\n}; // Create or update profile\n\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config); // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config); // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/delete/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusData,\n        status: err.response.data\n      }\n    });\n  }\n}; // Delete education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/delete/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusData,\n        status: err.response.data\n      }\n    });\n  }\n}; // Delete account\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm('Are you sure?')) {\n    try {\n      const res = await axios.delete(`/api/delete/profile/${id}`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Account Remove'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusData,\n          status: err.response.data\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/Users/franco/Documents/VSCode/devconnector/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","console","log","createProfile","formData","history","edit","config","post","push","errors","response","forEach","error","msg","statusText","status","addExperience","put","addEducation","deleteExperience","id","delete","statusData","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from '../actions/types';\n\n// GET current user profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('http://localhost:3000/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    // dispatch({\n    //   type: PROFILE_ERROR,\n    //   payload: { msg: err.response.statusText, status: err.response.status },\n    // });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      config: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/api/profile/education', formData, config);\n    // dispatch({\n    //   type: GET_PROFILE,\n    //   payload: res.data,\n    // });\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/delete/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusData, status: err.response.data },\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/delete/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Remove', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusData, status: err.response.data },\n    });\n  }\n};\n\n// Delete account\nexport const deleteAccount = (id) => async (dispatch) => {\n  if (window.confirm('Are you sure?')) {\n    try {\n      const res = await axios.delete(`/api/delete/profile/${id}`);\n\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n      dispatch({\n        type: ACCOUNT_DELETED,\n      });\n      dispatch(setAlert('Account Remove'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusData, status: err.response.data },\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}